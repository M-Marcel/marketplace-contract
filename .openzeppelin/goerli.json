{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xbC9F9dF16c9ca1E5A8e753B514EA680a9380A95A",
      "txHash": "0xc3e6e166c046e2e149546e5fca93d184ac9d6fa8948d0f6d40eb2585d7d8b3b8",
      "kind": "uups"
    },
    {
      "address": "0x26fC04121C3e94a82cc5c1efD76AFC7a0f4460d7",
      "txHash": "0x21134f609c071f4d5845b7be326da20fef2b678d49c71190ec12593819911abe",
      "kind": "uups"
    },
    {
      "address": "0xeE1cF7742400ed99E0E17190A05711856ae37f6E",
      "txHash": "0xf15134d99438e7cc308ea857b05be83df8133afe42e2e55d0ced0dd5f4495547",
      "kind": "uups"
    },
    {
      "address": "0xeFe4CB5F631A50398CC0331437839e5D8ff762F7",
      "txHash": "0xc8526527f66b8d54be66cfebb2918e31749de138b1ab4b194a6515c54e80f564",
      "kind": "uups"
    }
  ],
  "impls": {
    "695f5decc4ab9a48d854db55523d94f54affba96a60f9c5c18869c6126369b81": {
      "address": "0x69068b9d674d5582Eae44d769B71ff5fEC7CbAd3",
      "txHash": "0x1c2c09fdef2270fd89d05a58b585b843be350350e0300ccd16401d996322894f",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:465"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "tokenId",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(Counter)2296_storage",
            "contract": "NftMarketplace",
            "src": "contracts\\NftMarketplace.sol:25"
          },
          {
            "label": "listedItemId",
            "offset": 0,
            "slot": "352",
            "type": "t_struct(Counter)2296_storage",
            "contract": "NftMarketplace",
            "src": "contracts\\NftMarketplace.sol:26"
          },
          {
            "label": "addressToTokens",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_address,t_array(t_struct(UserToken)2847_storage)dyn_storage)",
            "contract": "NftMarketplace",
            "src": "contracts\\NftMarketplace.sol:49"
          },
          {
            "label": "listedItems",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_uint256,t_struct(ListedItem)2860_storage)",
            "contract": "NftMarketplace",
            "src": "contracts\\NftMarketplace.sol:51"
          },
          {
            "label": "tokenToListedItem",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "NftMarketplace",
            "src": "contracts\\NftMarketplace.sol:53"
          },
          {
            "label": "depositedForItem",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "NftMarketplace",
            "src": "contracts\\NftMarketplace.sol:55"
          },
          {
            "label": "s_proceeds",
            "offset": 0,
            "slot": "357",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NftMarketplace",
            "src": "contracts\\NftMarketplace.sol:57"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(UserToken)2847_storage)dyn_storage": {
            "label": "struct NftMarketplace.UserToken[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_struct(UserToken)2847_storage)dyn_storage)": {
            "label": "mapping(address => struct NftMarketplace.UserToken[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ListedItem)2860_storage)": {
            "label": "mapping(uint256 => struct NftMarketplace.ListedItem)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2296_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ListedItem)2860_storage": {
            "label": "struct NftMarketplace.ListedItem",
            "members": [
              {
                "label": "itemId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "seller",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "owner",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "numSold",
                "type": "t_uint32",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "quantity",
                "type": "t_uint32",
                "offset": 4,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(UserToken)2847_storage": {
            "label": "struct NftMarketplace.UserToken",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
